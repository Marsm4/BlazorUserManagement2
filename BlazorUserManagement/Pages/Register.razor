@page "/register"
@using BlazorUserManagement.Models
@using BlazorUserManagement.Services
@inject UserService UserService
@inject NavigationManager Navigation

<h3>Регистрация</h3>

<EditForm Model="@registerUser" OnValidSubmit="PerformRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerUser.Email" />
    </div>

    <div>
        <label>Имя:</label>
        <InputText @bind-Value="registerUser.Name" />
    </div>

    <div>
        <label>Описание:</label>
        <InputText @bind-Value="registerUser.Description" />
    </div>

    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="registerUser.Password" type="password" />
    </div>

    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private RegisterUserDto registerUser = new();

    private async Task PerformRegistration()
    {
        // Включаем проверку перед отправкой на сервер
        if (await UserService.CheckIfEmailExistsAsync(registerUser.Email))
        {
            // Показать предупреждение, если почта уже существует
            // Например, можно использовать компонент для отображения ошибки
            Console.WriteLine("Этот email уже существует.");
            return;
        }

        if (await UserService.RegisterUserAsync(registerUser))
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            Console.WriteLine("Ошибка при регистрации.");
        }
    }
}
